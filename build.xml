<project name="test" default="usage" basedir="." >
  <description>
    simple example build file
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>
  
  <target name="usage">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <echo> ant updatebuildnum </echo>
  </target>
  
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
  <taskdef resource="net/sf/antcontrib/antlib.xml"/>
  
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp>
      <format property="log_time" pattern="MM_dd_yyyy_hh_mm_ss_aa" />
    </tstamp>
    <!-- Create the build directory structure used by compile -->
    <dirname property="project.dir" file="${basedir}"/>
	<echo> project.dir - ${project.dir} </echo>
	<echo> basedir - ${basedir} </echo>
  </target>
  
    <target name="initbuild" depends="init">
    <condition property="do.abort.build.tag">
      <not>
        <available file="build.tag"/>
      </not>
    </condition>

    <fail if="do.abort.build.tag">build failed: build.tag is missing</fail>
    <property file="build.tag"/>
    <echo>Build tag - ${version.number}</echo>

  </target>

  <target name="updatebuildnum" depends="initbuild">
    <property file="build.tag"/>
    
    <propertyregex property="year"
                   input="${version.number}"
                   regexp="([^\.]*).([^\.]*).([^\.]*).([^\.]*)"
                   select="\1" />

    <propertyregex property="release"
                   input="${version.number}"
                   regexp="([^\.]*).([^\.]*).([^\.]*).([^\.]*)"
                   select="\2" />

    <propertyregex property="patch"
                   input="${version.number}"
                   regexp="([^\.]*).([^\.]*).([^\.]*).([^\.]*)"
                   select="\3" />

    <echo>build.tag</echo>

    <propertyregex property="app.tag.year"
                   input="${version.number}"
                   regexp="([^\.]*).([^\.]*).([^\.]*).([^\.]*)"
                   select="\1" />

    <propertyregex property="app.tag.release"
                   input="${version.number}"
                   regexp="([^\.]*).([^\.]*).([^\.]*).([^\.]*)"
                   select="\2" />

<propertyregex property="app.tag.patch"
                   input="${version.number}"
                   regexp="([^\.]*).([^\.]*).([^\.]*).([^\.]*)"
                   select="\3" />

    <propertyregex property="build.number"
                   input="${version.number}"
                   regexp="([^\.]*).([^\.]*).([^\.]*).([^\.]*)"
                   select="\4" />

    <if>
      <and>
        <equals arg1="${app.tag.year}" arg2="${year}"/>
        <equals arg1="${app.tag.release}" arg2="${release}"/>
        <equals arg1="${app.tag.patch}" arg2="${patch}"/>
      </and>
      <then>
        <math result="new.app.build.number" operand1="${build.number}" operation="+" operand2="1" datatype="int"/>
      </then>
      <else>
        <property name="new.app.build.number" value="1"/>
      </else>
    </if>

    <delete file="build.tag"
            quiet="true"/>
    <propertyfile file="build.tag">
      <entry key="version.number"
             value="${year}.${release}.${patch}.${new.app.build.number}"/>
    </propertyfile>

    <property file="build.tag"/>
    <echo>Version for ${app.name} : "${year}.${release}.${patch}.${new.app.build.number}"</echo>

    <exec executable="git" dir="${basedir}" outputproperty="oput" failonerror="true">
	    <arg value="commit"/>
		<arg value="-am"/>
		<arg value="commiting new version"/>
    </exec>
	
	<echo message="${oput}"/>
	<exec executable="git" dir="${basedir}" failonerror="true">
	    <arg value="status"/>
	</exec>
	
	<exec executable="git" dir="${basedir}" failonerror="true">
	    <arg value="push"/>
	</exec>
	
  </target>
</project>